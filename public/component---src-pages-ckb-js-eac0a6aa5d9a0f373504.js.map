{"version":3,"sources":["webpack:///./src/pages/ckb.js"],"names":["MainNetCodeHash","ec","EC","BlogIndex","state","privateKey","mainnetaddress","testnetaddress","onGenAddress","genKeyPair","priv","toString","pubKey","ckbUtils","blake160","lockHash","hashType","codeHash","args","mainAddr","prefix","type","codeHashOrCodeHashIndex","testAddr","setState","render","this","siteTitle","props","data","site","siteMetadata","title","location","style","marginBottom","rhythm","padding","borderRadius","border","onClick","React","Component","pageQuery"],"mappings":"qPAUA,IAAMA,EAAkB,qEAElBC,EAAK,IAAIC,KAAG,aAEZC,E,4JACJC,MAAQ,CACNC,WAAY,KACZC,eAAgB,KAChBC,eAAgB,M,EAGlBC,aAAe,WAEb,IAYMH,EAAa,KAAOJ,EAAGQ,aAAaC,KAAKC,SAAS,OAElDC,EAASC,wBAA+BR,GACxCS,EAAW,KAAOD,WAAkBD,EAAQ,OAC5CG,EAAWF,eAAsB,CACrCG,SAAU,OACVC,SAAUjB,EACVkB,KAAMJ,IAGFK,EAAWN,sBAA6BR,EAtB1B,CAClBe,OAAQ,MACRC,KAAM,OACNC,wBAAyB,SAoBrBC,EAAWV,sBAA6BR,EAjB1B,CAClBe,OAAQ,MACRC,KAAM,OACNC,wBAAyB,SAgB3B,EAAKE,SAAS,CACZnB,aACAO,SACAE,WACAC,WACAT,eAAgBa,EAChBZ,eAAgBgB,K,4GAKpBE,OAAA,WACE,IAAKC,KAAKtB,MAAO,OAAO,KADjB,IAGDuB,EADWD,KAAKE,MAAdC,KACeC,KAAKC,aAAaC,MAHlC,EAI4EN,KAAKtB,MAAhFC,EAJD,EAICA,WAAYO,EAJb,EAIaA,OAAQE,EAJrB,EAIqBA,SAAUC,EAJ/B,EAI+BA,SAAUT,EAJzC,EAIyCA,eAAgBC,EAJzD,EAIyDA,eAEhE,OACE,kBAAC,IAAD,CAAQ0B,SAAUP,KAAKE,MAAMK,SAAUD,MAAOL,GAC5C,kBAAC,IAAD,CAAKK,MAAM,QACX,wBACEE,MAAO,CACLC,aAAcC,YAAO,KAFzB,aAME,6BANF,oCASA,uBACEF,MAAO,CACLG,QAAS,GACTC,aAAc,EACdC,OAAQ,sBAJZ,mVAUA,4BAAQC,QAASd,KAAKlB,cAAtB,kBACA,6BAAK,kDAAL,KAAuCH,GACvC,6BAEA,6BAAK,iDAAL,KAAsCO,GACtC,6BAEA,6BAAK,4CAAL,KAAiCE,GACjC,6BAEA,6BAAK,4CAAL,KAAiCC,GACjC,6BAEA,6BAAK,yDAAL,KAA8CR,GAC9C,6BAEA,6BAAK,wDAAL,KAA6CD,GAC7C,+B,GA1FgBmC,IAAMC,WAgGfvC,YAER,IAAMwC,EAAS","file":"component---src-pages-ckb-js-eac0a6aa5d9a0f373504.js","sourcesContent":["import { ec as EC } from 'elliptic'\nimport * as ckbUtils from '@nervosnetwork/ckb-sdk-utils'\n\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst MainNetCodeHash = '0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8'\n\nconst ec = new EC('secp256k1')\n\nclass BlogIndex extends React.Component {\n  state = {\n    privateKey: null,\n    mainnetaddress: null,\n    testnetaddress: null,\n  }\n\n  onGenAddress = () => {\n\n    const mainnetOpts = {\n      prefix: 'ckb',\n      type: '0x01',\n      codeHashOrCodeHashIndex: '0x00',\n    }\n    \n    const testnetOpts = {\n      prefix: 'ckt',\n      type: '0x01',\n      codeHashOrCodeHashIndex: '0x00',\n    }\n\n    const privateKey = \"0x\" + ec.genKeyPair().priv.toString('hex')\n    // privateKey need to be BN\n    const pubKey = ckbUtils.privateKeyToPublicKey(privateKey)\n    const blake160 = \"0x\" + ckbUtils.blake160(pubKey, \"hex\")\n    const lockHash = ckbUtils.scriptToHash({\n      hashType: \"type\",\n      codeHash: MainNetCodeHash,\n      args: blake160,\n    })\n    \n    const mainAddr = ckbUtils.privateKeyToAddress(privateKey, mainnetOpts)\n    const testAddr = ckbUtils.privateKeyToAddress(privateKey, testnetOpts)\n    \n    this.setState({\n      privateKey,\n      pubKey,\n      blake160,\n      lockHash,\n      mainnetaddress: mainAddr,\n      testnetaddress: testAddr,\n    })\n\n  }\n\n  render() {\n    if (!this.state) return null\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const { privateKey, pubKey, blake160, lockHash, mainnetaddress, testnetaddress } = this.state\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"CKB\" />\n        <h3\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        >\n          CKB 在线钱包工具\n          <br/>\n          Your CKB private key and address\n        </h3>\n        <p\n          style={{\n            padding: 10,\n            borderRadius: 3,\n            border: '2px solid #ff5d5d'\n          }}\n        >\n          此工具仅用于生成CKB地址，仅做测试用途。在线生成地址有风险，请咨询有经验的人帮你生成。本工具支持离线生成，你可以先断网再点击Generate按钮。\n          (This ONLY uses for CKB Address, and is NOT a recommended way of creating a wallet. Please ask experienced crypto users to help you generate them. This tool support offline generating and you can turn off your internet connection before click Generate button.)\n        </p>\n        <button onClick={this.onGenAddress}>生成地址(Generate)</button>\n        <div><strong>私钥(privateKey)</strong>: {privateKey}</div>\n        <br/>\n\n        <div><strong>公钥(publicKey)</strong>: {pubKey}</div>\n        <br/>\n\n        <div><strong>blake160</strong>: {blake160}</div>\n        <br/>\n\n        <div><strong>lockHash</strong>: {lockHash}</div>\n        <br/>\n        \n        <div><strong>测试网地址(testnetAddress)</strong>: {testnetaddress}</div>\n        <br/>\n\n        <div><strong>主网地址(mainnetAddress)</strong>: {mainnetaddress}</div>\n        <br/>        \n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}