{"version":3,"sources":["webpack:///./src/pages/decode.js"],"names":["MainNetCodeHash","BlogIndex","state","decodeAddr","upDecodeAddr","evt","setState","target","value","onEncodeAddress","addr","blake160","ckbUtils","toString","slice","lockHash","hashType","codeHash","args","render","this","siteTitle","props","data","site","siteMetadata","title","location","style","marginBottom","rhythm","width","type","name","onChange","onClick","React","Component","pageQuery"],"mappings":"yOASA,IAAMA,EAAkB,qEAElBC,E,4JACJC,MAAQ,CACNC,WAAY,I,EAGdC,aAAc,SAACC,GACb,EAAKC,SAAS,CACZH,WAAYE,EAAIE,OAAOC,S,EAI3BC,gBAAkB,WAChB,IAAMC,EAAO,EAAKR,MAAMC,WAElBQ,EAAW,KADCC,aAAoBA,eAAsBF,IAC1BG,WAAWC,MAAM,GAE7CC,EAAWH,eAAsB,CACrCI,SAAU,OACVC,SAAUjB,EACVkB,KAAMP,IAGR,EAAKL,SAAS,CACZI,OACAC,WACAI,c,4GAKJI,OAAA,WACE,IAAKC,KAAKlB,MAAO,OAAO,KADjB,IAGDmB,EADWD,KAAKE,MAAdC,KACeC,KAAKC,aAAaC,MAHlC,EAI6BN,KAAKlB,MAAlCQ,EAJA,EAIAA,KAAMC,EAJN,EAIMA,SAAUI,EAJhB,EAIgBA,SAEvB,OACE,kBAAC,IAAD,CAAQY,SAAUP,KAAKE,MAAMK,SAAUD,MAAOL,GAC5C,kBAAC,IAAD,CAAKK,MAAM,WACX,wBACEE,MAAO,CACLC,aAAcC,YAAO,KAFzB,2CAQA,2BAAOF,MAAO,CAACG,MAAO,SAAUC,KAAK,OAAOC,KAAK,OAAOzB,MAAOY,KAAKlB,MAAMC,WAAY+B,SAAUd,KAAKhB,eACrG,6BACA,6BAEA,4BAAQ+B,QAASf,KAAKX,iBAAtB,UACA,6BACA,6BAEA,6BAAK,2CAAL,KAAgCC,GAChC,6BAEA,6BAAK,4CAAL,KAAiCC,GACjC,6BAEA,6BAAK,4CAAL,KAAiCI,GACjC,6BACA,+B,GA/DgBqB,IAAMC,WAqEfpC,YAER,IAAMqC,EAAS","file":"component---src-pages-decode-js-715fe86960ae12e7f0e4.js","sourcesContent":["import * as ckbUtils from '@nervosnetwork/ckb-sdk-utils'\n\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst MainNetCodeHash = '0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8'\n\nclass BlogIndex extends React.Component {\n  state = {\n    decodeAddr: '',\n  }\n\n  upDecodeAddr= (evt) =>{\n    this.setState({\n      decodeAddr: evt.target.value\n    });\n  }\n\n  onEncodeAddress = () => {\n    const addr = this.state.decodeAddr\n    const parsedHex = ckbUtils.bytesToHex(ckbUtils.parseAddress(addr))\n    const blake160 = \"0x\" + parsedHex.toString().slice(6)\n \n    const lockHash = ckbUtils.scriptToHash({\n      hashType: \"type\",\n      codeHash: MainNetCodeHash,\n      args: blake160,\n    })\n    \n    this.setState({\n      addr,\n      blake160,\n      lockHash,\n    })\n\n  }\n\n  render() {\n    if (!this.state) return null\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const {addr, blake160, lockHash } = this.state\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"Decode\" />\n        <h3\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        >\n          Decode Address to Blake160 and LockHash\n        </h3>\n \n        <input style={{width: '30rem'}} type=\"text\" name=\"addr\" value={this.state.decodeAddr} onChange={this.upDecodeAddr}/>\n        <br/>\n        <br/>\n\n        <button onClick={this.onEncodeAddress}>Encode</button>\n        <br/>\n        <br/>\n\n        <div><strong>address</strong>: {addr}</div>\n        <br/>\n\n        <div><strong>blake160</strong>: {blake160}</div>\n        <br/>\n\n        <div><strong>lockHash</strong>: {lockHash}</div>\n        <br/>\n        <br/>        \n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}