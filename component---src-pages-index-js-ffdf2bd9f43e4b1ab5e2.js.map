{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/bio.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_1__","boxShadow","to","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","finalData","Fragment","children","Consumer","m","module","exports","require","default","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","author","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","qr","childImageSharp","alt","marginTop","minWidth","_public_static_d_1575665609_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","Layout","header","_this$props","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","className","Date","getFullYear","href","target","_bio__WEBPACK_IMPORTED_MODULE_4__","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-ffdf2bd9f43e4b1ab5e2.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    // const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"Home page\" />\n        <h3\n          style={{\n            marginBottom: rhythm(1 / 4),\n          }}\n        >\n          <Link style={{ boxShadow: `none` }} to={'/ckb'}>\n            CKB private key and address generator\n          </Link>\n        </h3>\n\n        {/* {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          )\n        })} */}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n        return (\n          <div>\n            {/* <div\n              style={{\n                display: `flex`,\n                marginBottom: rhythm(2.5),\n              }}\n            >\n              <Image\n                fixed={data.avatar.childImageSharp.fixed}\n                alt={author}\n                style={{\n                  marginRight: rhythm(1 / 2),\n                  marginBottom: 0,\n                  minWidth: 50,\n                }}\n              />\n              <p>\n                Hosted by <strong>{author}</strong> which are a decentralized organization.\n              </p>\n            </div> */}\n            <div\n              style={{\n                marginBottom: rhythm(2.5),\n              }}\n            >\n            <Image\n                fixed={data.qr.childImageSharp.fixed}\n                alt={author}\n                style={{\n                  marginTop: rhythm(1 / 2),\n                  marginBottom: 0,\n                  minWidth: 50,\n                }}\n              />\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/rebase.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    qr: file(absolutePath: { regex: \"/rebase-qr.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 150, height: 150) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n// import Image from \"gatsby-image\"\n\nimport { rhythm, scale } from \"../utils/typography\"\nimport Bio from \"./bio\"\n\nimport './layout.css'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main className=\"content\">{children}</main>\n        <footer className=\"footer\">\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://github.com/rebase-network/blockchain-tools\" target=\"_blank\">Rebase</a>\n          <Bio />\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}