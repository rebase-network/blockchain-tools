{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/bio.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","author","style","marginBottom","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","qr","childImageSharp","alt","marginTop","minWidth","_public_static_d_1575665609_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","header","_this$props","textDecoration","color","to","fontFamily","marginLeft","marginRight","maxWidth","padding","className","Date","getFullYear","href","_bio__WEBPACK_IMPORTED_MODULE_5__","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","arrayOf"],"mappings":"+LAMMA,4FACJC,OAAA,WAAS,IAEDC,EADWC,KAAKC,MAAdC,KACeC,KAAKC,aAAaC,MAEzC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUV,KAAKC,MAAMS,SAAUL,MAAON,GAC5CO,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKN,MAAM,mBACXC,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,yEATmBI,IAAMC,WAelBhB,YAER,IAAMiB,EAAS,+CCvBtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAGAE,IAAcC,oBAAsB,WAClC,MAAO,CACLC,2BAA4B,CAC1BC,UAAS,iBAKRH,IAAcI,YAErB,IAAMC,EAAa,IAAIC,IAAWN,KAOnBK,IACFZ,EAASY,EAAWZ,OACpBC,EAAQW,EAAWX,wCCtBhCJ,EAAAC,EAAAC,EAAA,sBAAAe,IAAA,IAAAC,EAAAlB,EAAA,GAAAmB,EAAAnB,EAAAO,EAAAW,GAAAE,EAAApB,EAAA,GAAAqB,EAAArB,EAAAO,EAAAa,GAAAE,EAAAtB,EAAA,IAAAuB,EAAAvB,EAAAO,EAAAe,GAAAtB,EAAAC,EAAAC,EAAA,sBAAAqB,EAAA/B,IAAAQ,EAAA,SAaMwB,EAAqB3B,IAAM4B,cAAc,IAEzCR,EAAc,SAAA/B,GAAK,OACvBiC,EAAA3B,EAAAC,cAAC+B,EAAmBE,SAApB,KACG,SAAAC,GACC,OACEzC,EAAMC,MACLwC,EAAgBzC,EAAM0C,QAAUD,EAAgBzC,EAAM0C,OAAOzC,MAEtDD,EAAMH,QAAUG,EAAM2C,UAC5B3C,EAAMC,KAAOD,EAAMC,KAAKA,KAAOwC,EAAgBzC,EAAM0C,OAAOzC,MAGvDgC,EAAA3B,EAAAC,cAAA,uCA4BfwB,EAAYa,UAAY,CACtB3C,KAAM4C,IAAUC,OAChBJ,MAAOG,IAAUE,OAAOC,WACxBnD,OAAQgD,IAAUI,KAClBN,SAAUE,IAAUI,2BC1DtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,4GC8D/C,IAAMK,EAAQ,aA2BCC,IA5Ef,WACE,OACEC,EAAAnD,EAAAC,cAACmD,EAAA,EAAD,CACEhB,MAAOa,EACP1D,OAAQ,SAAAI,GAAQ,IACN0D,EAAW1D,EAAKC,KAAKC,aAArBwD,OACR,OACEF,EAAAnD,EAAAC,cAAA,WAoBEkD,EAAAnD,EAAAC,cAAA,OACEqD,MAAO,CACLC,aAAc5C,YAAO,OAGzBwC,EAAAnD,EAAAC,cAACuD,EAAAxD,EAAD,CACIyD,MAAO9D,EAAK+D,GAAGC,gBAAgBF,MAC/BG,IAAKP,EACLC,MAAO,CACLO,UAAWlD,YAAO,IAClB4C,aAAc,EACdO,SAAU,SApCxBnE,KAAAoE,uGCTEC,EAAmB,SAAAC,GAAkB,IAAf9D,EAAe8D,EAAf9D,SACpB+D,EAAgBC,UAAOC,4BAA4BjE,EAASkE,UAClE,OAAKH,EAIE7D,IAAMJ,cAAcqE,IAApBC,OAAAC,OAAA,CACLrE,WACA+D,iBACGA,EAAcO,OANV,MAUXT,EAAiB1B,UAAY,CAC3BnC,SAAUoC,IAAUmC,MAAM,CACxBL,SAAU9B,IAAUE,OAAOC,aAC1BA,YAGUsB,kxFChBTW,oGACJpF,OAAA,WAAS,IAGHqF,EAHGC,EAC+BpF,KAAKC,MAAnCS,EADD0E,EACC1E,SAAUL,EADX+E,EACW/E,MAAOuC,EADlBwC,EACkBxC,SA8CzB,OAzCEuC,EAJY,MAGVzE,EAASkE,SAETlB,EAAAnD,EAAAC,cAAA,MACEqD,MAAKiB,OAAAC,OAAA,GACA5D,YAAM,KADN,CAEH2C,aAAc5C,YAAO,KACrBkD,UAAW,KAGbV,EAAAnD,EAAAC,cAACmD,EAAA,EAAD,CACEE,MAAO,CACLjC,UAAS,OACTyD,eAAc,OACdC,MAAK,WAEPC,GAAE,KAEDlF,IAMLqD,EAAAnD,EAAAC,cAAA,MACEqD,MAAO,CACL2B,WAAU,yBACVpB,UAAW,IAGbV,EAAAnD,EAAAC,cAACmD,EAAA,EAAD,CACEE,MAAO,CACLjC,UAAS,OACTyD,eAAc,OACdC,MAAK,WAEPC,GAAE,KAEDlF,IAMPqD,EAAAnD,EAAAC,cAAA,OACEqD,MAAO,CACL4B,WAAU,OACVC,YAAW,OACXC,SAAUzE,YAAO,IACjB0E,QAAY1E,YAAO,KAAZ,IAAoBA,YAAO,OAGpCwC,EAAAnD,EAAAC,cAAA,cAAS2E,GACTzB,EAAAnD,EAAAC,cAAA,QAAMqF,UAAU,WAAWjD,GAC3Bc,EAAAnD,EAAAC,cAAA,UAAQqF,UAAU,UAAlB,MACK,IAAIC,MAAOC,cADhB,mBAGErC,EAAAnD,EAAAC,cAAA,KAAGwF,KAAK,qCAAR,UACAtC,EAAAnD,EAAAC,cAACyF,EAAA,EAAD,YA/DWrF,IAAMC,YAsEZqE,uGCnEf,SAASgB,EAAT1B,GAAiD,IAAlC2B,EAAkC3B,EAAlC2B,YAAaC,EAAqB5B,EAArB4B,KAAMC,EAAe7B,EAAf6B,KAAMhG,EAASmE,EAATnE,MAC9BF,EADuCmG,EAAApG,KACvCC,KAcFoG,EAAkBJ,GAAehG,EAAKC,aAAa+F,YAEzD,OACE7F,EAAAC,EAAAC,cAACgG,EAAAjG,EAAD,CACEkG,eAAgB,CACdL,QAEF/F,MAAOA,EACPqG,cAAa,QAAUvG,EAAKC,aAAaC,MACzCgG,KAAM,CACJ,CACEM,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAASvG,GAEX,CACEwG,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASzG,EAAKC,aAAawD,QAE7B,CACE+C,KAAI,gBACJC,QAASvG,GAEX,CACEsG,KAAI,sBACJC,QAASL,IAEXO,OAAOT,KAKfH,EAAIa,aAAe,CACjBX,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbD,EAAIrD,UAAY,CACdsD,YAAarD,IAAUE,OACvBoD,KAAMtD,IAAUE,OAChBqD,KAAMvD,IAAUkE,QAAQlE,IAAUC,QAClC1C,MAAOyC,IAAUE,OAAOC,YAGXiD","file":"component---src-pages-404-js-2b2139516dd509c0962c.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n        return (\n          <div>\n            {/* <div\n              style={{\n                display: `flex`,\n                marginBottom: rhythm(2.5),\n              }}\n            >\n              <Image\n                fixed={data.avatar.childImageSharp.fixed}\n                alt={author}\n                style={{\n                  marginRight: rhythm(1 / 2),\n                  marginBottom: 0,\n                  minWidth: 50,\n                }}\n              />\n              <p>\n                Hosted by <strong>{author}</strong> which are a decentralized organization.\n              </p>\n            </div> */}\n            <div\n              style={{\n                marginBottom: rhythm(2.5),\n              }}\n            >\n            <Image\n                fixed={data.qr.childImageSharp.fixed}\n                alt={author}\n                style={{\n                  marginTop: rhythm(1 / 2),\n                  marginBottom: 0,\n                  minWidth: 50,\n                }}\n              />\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/rebase.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    qr: file(absolutePath: { regex: \"/rebase-qr.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 150, height: 150) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n// import Image from \"gatsby-image\"\n\nimport { rhythm, scale } from \"../utils/typography\"\nimport Bio from \"./bio\"\n\nimport './layout.css'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main className=\"content\">{children}</main>\n        <footer className=\"footer\">\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://github.com/rebase-network\">Rebase</a>\n          <Bio />\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}