{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/bio.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","location","_components_seo__WEBPACK_IMPORTED_MODULE_2__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","finalData","Fragment","children","Consumer","m","module","exports","require","default","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","author","style","marginBottom","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","qr","childImageSharp","alt","marginTop","minWidth","_public_static_d_1575665609_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","Layout","header","_this$props","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","textDecoration","color","to","fontFamily","marginLeft","marginRight","maxWidth","padding","className","Date","getFullYear","href","target","_bio__WEBPACK_IMPORTED_MODULE_4__","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps"],"mappings":"mLAMMA,kLACJC,OAAA,WAAS,IAEDC,EADWC,KAAKC,MAAdC,KACeC,KAAKC,aAAaC,MAEzC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUV,KAAKC,MAAMS,SAAUL,MAAON,GAC5CO,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKN,MAAM,mBACXC,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,yEATmBI,IAAMC,WAelBhB,YAER,IAAMiB,EAAS,+CCvBtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAGAE,IAAcC,oBAAsB,WAClC,MAAO,CACLC,2BAA4B,CAC1BC,UAAS,iBAKRH,IAAcI,YAErB,IAAMC,EAAa,IAAIC,IAAWN,KAOnBK,IACFZ,EAASY,EAAWZ,OACpBC,EAAQW,EAAWX,wCCtBhCJ,EAAAC,EAAAC,EAAA,sBAAAe,IAAA,IAAAC,EAAAlB,EAAA,GAAAT,EAAAS,EAAAO,EAAAW,GAAAC,EAAAnB,EAAA,IAAAoB,EAAApB,EAAAO,EAAAY,GAAAnB,EAAAC,EAAAC,EAAA,sBAAAkB,EAAA5B,IAAAQ,EAAA,KAAAA,EAAA,GAcyBqB,QAAOC,QAdhC,IAgBMC,EAAqB1B,IAAM2B,cAAc,IAE/C,SAASC,EAATC,GAA2E,IAAxCC,EAAwCD,EAAxCC,gBAAiBxC,EAAuBuC,EAAvBvC,KAAMyC,EAAiBF,EAAjBE,MAAO7C,EAAU2C,EAAV3C,OACzD8C,EAAY1C,EACdA,EAAKA,KACLwC,EAAgBC,IAAUD,EAAgBC,GAAOzC,KAErD,OACEI,EAAAC,EAAAC,cAACF,EAAAC,EAAMsC,SAAP,KACGD,GAAa9C,EAAO8C,IACnBA,GAAatC,EAAAC,EAAAC,cAAA,qCAKrB,IAAMwB,EAAc,SAAA/B,GAAS,IACnBC,EAAkCD,EAAlCC,KAAMyC,EAA4B1C,EAA5B0C,MAAO7C,EAAqBG,EAArBH,OAAQgD,EAAa7C,EAAb6C,SAE7B,OACExC,EAAAC,EAAAC,cAAC8B,EAAmBS,SAApB,KACG,SAAAL,GAAe,OACdpC,EAAAC,EAAAC,cAACgC,EAAD,CACEtC,KAAMA,EACNyC,MAAOA,EACP7C,OAAQA,GAAUgD,EAClBJ,gBAAiBA,4BCzC3B,IAAsBM,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,4GC8D/C,IAAMK,EAAQ,aA2BCC,IA5Ef,WACE,OACEC,EAAAhD,EAAAC,cAACgD,EAAA,EAAD,CACEb,MAAOU,EACPvD,OAAQ,SAAAI,GAAQ,IACNuD,EAAWvD,EAAKC,KAAKC,aAArBqD,OACR,OACEF,EAAAhD,EAAAC,cAAA,WAoBE+C,EAAAhD,EAAAC,cAAA,OACEkD,MAAO,CACLC,aAAczC,YAAO,OAGzBqC,EAAAhD,EAAAC,cAACoD,EAAArD,EAAD,CACIsD,MAAO3D,EAAK4D,GAAGC,gBAAgBF,MAC/BG,IAAKP,EACLC,MAAO,CACLO,UAAW/C,YAAO,IAClByC,aAAc,EACdO,SAAU,SApCxBhE,KAAAiE,gFCOWC,UAjBU,SAAA3B,GAAiC,IAA9B/B,EAA8B+B,EAA9B/B,SAAU2D,EAAoB5B,EAApB4B,cACpC,OAAKA,EAGEzD,IAAMJ,cAAc8D,IAApBC,OAAAC,OAAA,CACL9D,WACA2D,iBACGA,EAAcI,OALV,soFCELC,kLACJ5E,OAAA,WAAS,IAGH6E,EAHGC,EAC+B5E,KAAKC,MAAnCS,EADDkE,EACClE,SAAUL,EADXuE,EACWvE,MAAOyC,EADlB8B,EACkB9B,SA8CzB,OAzCE6B,EAJY,MAGVjE,EAASmE,SAETC,EAAAvE,EAAAC,cAAA,MACEkD,MAAKa,OAAAC,OAAA,GACArD,YAAM,KADN,CAEHwC,aAAczC,YAAO,KACrB+C,UAAW,KAGba,EAAAvE,EAAAC,cAACuE,EAAA,EAAD,CACErB,MAAO,CACL9B,UAAS,OACToD,eAAc,OACdC,MAAK,WAEPC,GAAE,KAED7E,IAMLyE,EAAAvE,EAAAC,cAAA,MACEkD,MAAO,CACLyB,WAAU,yBACVlB,UAAW,IAGba,EAAAvE,EAAAC,cAACuE,EAAA,EAAD,CACErB,MAAO,CACL9B,UAAS,OACToD,eAAc,OACdC,MAAK,WAEPC,GAAE,KAED7E,IAMPyE,EAAAvE,EAAAC,cAAA,OACEkD,MAAO,CACL0B,WAAU,OACVC,YAAW,OACXC,SAAUpE,YAAO,IACjBqE,QAAYrE,YAAO,KAAZ,IAAoBA,YAAO,OAGpC4D,EAAAvE,EAAAC,cAAA,cAASmE,GACTG,EAAAvE,EAAAC,cAAA,QAAMgF,UAAU,WAAW1C,GAC3BgC,EAAAvE,EAAAC,cAAA,UAAQgF,UAAU,UAAlB,MACK,IAAIC,MAAOC,cADhB,mBAGEZ,EAAAvE,EAAAC,cAAA,KAAGmF,KAAK,qDAAqDC,OAAO,UAApE,UACAd,EAAAvE,EAAAC,cAACqF,EAAA,EAAD,YA/DWjF,IAAMC,WAsEZ6D,uFCnEf,SAASoB,EAATrD,GAAiD,IAAlCsD,EAAkCtD,EAAlCsD,YAAaC,EAAqBvD,EAArBuD,KAAMC,EAAexD,EAAfwD,KAAM5F,EAASoC,EAATpC,MAC9BF,EADuC+F,EAAAhG,KACvCC,KAcFgG,EAAkBJ,GAAe5F,EAAKC,aAAa2F,YAEzD,OACEjB,EAAAvE,EAAAC,cAAC4F,EAAA7F,EAAD,CACE8F,eAAgB,CACdL,QAEF3F,MAAOA,EACPiG,cAAa,QAAUnG,EAAKC,aAAaC,MACzC4F,KAAM,CACJ,CACEM,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAASnG,GAEX,CACEoG,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASrG,EAAKC,aAAaqD,QAE7B,CACE8C,KAAI,gBACJC,QAASnG,GAEX,CACEkG,KAAI,sBACJC,QAASL,IAEXO,OAAOT,KAKfH,EAAIa,aAAe,CACjBX,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED","file":"component---src-pages-404-js-919132e744fc3971f926.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n        return (\n          <div>\n            {/* <div\n              style={{\n                display: `flex`,\n                marginBottom: rhythm(2.5),\n              }}\n            >\n              <Image\n                fixed={data.avatar.childImageSharp.fixed}\n                alt={author}\n                style={{\n                  marginRight: rhythm(1 / 2),\n                  marginBottom: 0,\n                  minWidth: 50,\n                }}\n              />\n              <p>\n                Hosted by <strong>{author}</strong> which are a decentralized organization.\n              </p>\n            </div> */}\n            <div\n              style={{\n                marginBottom: rhythm(2.5),\n              }}\n            >\n            <Image\n                fixed={data.qr.childImageSharp.fixed}\n                alt={author}\n                style={{\n                  marginTop: rhythm(1 / 2),\n                  marginBottom: 0,\n                  minWidth: 50,\n                }}\n              />\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/rebase.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    qr: file(absolutePath: { regex: \"/rebase-qr.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 150, height: 150) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n// import Image from \"gatsby-image\"\n\nimport { rhythm, scale } from \"../utils/typography\"\nimport Bio from \"./bio\"\n\nimport './layout.css'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main className=\"content\">{children}</main>\n        <footer className=\"footer\">\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://github.com/rebase-network/blockchain-tools\" target=\"_blank\">Rebase</a>\n          <Bio />\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}